<?php

// Important!!  You need to have database.php in your root directory so that the connection 
// to the database can be made.
// UPDATE:  Create an empty array called customers.  
$customers = $array_name;
$count = 0;

// UPDATE:  Create an if statement to see if the web FORM has been submitted with the
// "Upload Customers" button generated by the View in the file customer_mgr.php
if (isset($_POST['add']))
{   // Replace FALSE with the appropriate PHP commands to check if the FROM was submitted
    // UPDATE: Set the variable $file with PHP generated filename from PHP variable $_FILES 
    // see http://php.net/manual/en/reserved.variables.files.php for help
    $file = $_FILES['file1']['tmp_name']; // Replace NULL with the correct code for the uploaded filename

    // UPDATE: Call the function addCustomers passing the appropriate variable and assigning the 
    // result to the variable $customers.  
    // (You will need to update the addCustomers function below.)
    addCustomers($file);
}

function addCustomers($f) {
    require_once ('database.php');
    // UPDATE:  Write an if statement to see if $f points to a file that exists
    if (fopen($f, 'rb')) { // Replace FALSE with the appropriate PHP commands to check if $f is a file
        // UPDATE:  Write the command to open the file for reading and assign the resource to $fh 
        $fh = $f;  // Replace null with the PHP command to assign the file resource $fh

        // UPDATE:  Use a while statement to loop through the file resource $fh until the end of the file (help see page 748)
        while (!feof($fh)) { // Replace FALSE with the PHP command to read a line of data and assign it to $line

            $line = trim($line);  // We do this to remove any extra characters like carriage returns off the end of the line
            $data = explode(',', $line);  // The explode function creates an array from the comma separated data in $line
            $pwd = sha1($data[0] . $data[1]); // This converts the plain text data into a hashed password
            // Can you identify the columns for the CSV file and what elements would be at the particular positions in $data array
            $query = "INSERT INTO customers (customerID, emailAddress, password, firstName, lastName)
                      VALUES (null, '" . $data[0] . "', '" . $pwd . "', '" . $data[2] . "','" . $data[3] . "')";
            try {
                // UPDATE:  Write the command to execute the $query statement (use the $db database variable from your database.php file)
                    $customers = $db->query($query);
                } catch (PDOException $e) {
                    display_db_error($e->getMessage());                    
                }
            // UPDATE:  Increment the $count variable to keep track of how many customers
            // were imported into the database.
            $count= $count++;
        }
        fclose($fh);
    } else {
        echo "Error: " . $file . " does not exist<br />";
    }
    return $count;
}

require_once ('customer_mgr.php');  // This is our View file
?>


